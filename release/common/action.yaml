name: Python Release & Publish
description: Python that publishes a new release.
inputs:
  dry-run:
    required: false
    description: Whether to run semantic release in `dry-run` mode. It will override the `dryRun` attribute in your configuration file
    default: "false"
  extra-plugins:
    required: false
    description: Extra plugins for pre-install. You can also specify specifying version range for the extra plugins if you prefer.
  git-user-name:
    required: false
    description: User name to associate with release version bump commit.
    default: Github Actions
  git-user-email:
    required: false
    description: User email to associate with release version bump commit.
    default: github-actions@example.com
  github-token:
    required: true
    description: GitHub token that can checkout the repository as well as create tags/releases against it. e.g. 'secrets.GITHUB_TOKEN'
    default: ${{ github.token }}
outputs:
  new-release-published:
    description: Whether a new release was published
    value: ${{ steps.release.outputs.new_release_published }}
  new-release-version:
    description: Version of the new release
    value: ${{ steps.release.outputs.new_release_version }}
  new-release-major-version:
    description: Major version of the new release
    value: ${{ steps.release.outputs.new_release_major_version }}
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Release
      id: release
      if: steps.version.outputs.new_release_published == 'true'
      uses: cycjimmy/semantic-release-action@v3
      with:
        dry_run: ${{ inputs.dry-run }}
        extra_plugins: ${{ inputs.extra-plugins }}
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
